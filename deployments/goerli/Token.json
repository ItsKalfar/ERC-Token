{
  "address": "0xe0B381d066196131fe4556fdc1CAB4030efe1129",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_decimals",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_totalSupply",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_decimals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x2d406965de18388f0fdbcb4018a2f5a7e46ddb7a6165a6226b4f96f4e8a9ab88",
  "receipt": {
    "to": null,
    "from": "0x580F1Ba880e1ecE870Ccde82444776051319D5b4",
    "contractAddress": "0xe0B381d066196131fe4556fdc1CAB4030efe1129",
    "transactionIndex": 86,
    "gasUsed": "876916",
    "logsBloom": "0x
    "blockHash": "0x0db02a0f97a8143dd00e527bb30e4204bc6426ccf2209a512c360dbc40cffe85",
    "transactionHash": "0x2d406965de18388f0fdbcb4018a2f5a7e46ddb7a6165a6226b4f96f4e8a9ab88",
    "logs": [],
    "blockNumber": 8084074,
    "cumulativeGasUsed": "13269117",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "ArsyToken",
    "ARSY",
    "18",
    "10000000000000000000000000"
  ],
  "numDeployments": 1,
  "solcInputHash": "51a4ae9cf2090a077f670815f21d12fe",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_decimals\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_totalSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"params\":{\"_spender\":\"allowed to spend and a max amount allowed to spend\",\"_value\":\"amount value of token to send\"},\"returns\":{\"_0\":\"true, success once address approved\"}},\"transfer(address,uint256)\":{\"params\":{\"_to\":\"receiver of token\",\"_value\":\"amount value of token to send\"},\"returns\":{\"success\":\"as true, for transfer\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"internal helper transfer function with required safety checks\",\"params\":{\"_from\":\", address sending to and the amount to send\",\"_to\":\"receiver of token\",\"_value\":\"amount value of token to send\"},\"returns\":{\"_0\":\"true, success once transfered from original account\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"approve(address,uint256)\":{\"notice\":\"Approve other to spend on your behalf eg an exchange\"},\"transfer(address,uint256)\":{\"notice\":\"transfer amount of tokens to an address\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"transfer by approved person from original address of an amount within approved limit\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Token.sol\":\"Token\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Token.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.17;\\r\\n\\r\\ncontract Token {\\r\\n    // My Variables - State variables\\r\\n    string public s_name;\\r\\n    string public s_symbol;\\r\\n    uint256 public s_decimals;\\r\\n    uint256 public s_totalSupply;\\r\\n\\r\\n    // Keep track balances and allowances approved\\r\\n    mapping(address => uint256) public balanceOf;\\r\\n    mapping(address => mapping(address => uint256)) public allowance;\\r\\n\\r\\n    // Events - fire events on state changes etc\\r\\n    event Transfer(\\r\\n        address indexed from,\\r\\n        address indexed to,\\r\\n        uint256 indexed value\\r\\n    );\\r\\n    event Approval(\\r\\n        address indexed owner,\\r\\n        address indexed spender,\\r\\n        uint256 indexed value\\r\\n    );\\r\\n\\r\\n    constructor(\\r\\n        string memory _name,\\r\\n        string memory _symbol,\\r\\n        uint _decimals,\\r\\n        uint _totalSupply\\r\\n    ) {\\r\\n        s_name = _name;\\r\\n        s_symbol = _symbol;\\r\\n        s_decimals = _decimals;\\r\\n        s_totalSupply = _totalSupply;\\r\\n        // The person who deploys the contract owns all the tokens initially\\r\\n        // This can be used then as liquidity pool and people can buy that toekn\\r\\n        balanceOf[msg.sender] = s_totalSupply;\\r\\n    }\\r\\n\\r\\n    /// @notice transfer amount of tokens to an address\\r\\n    /// @param _to receiver of token\\r\\n    /// @param _value amount value of token to send\\r\\n    /// @return success as true, for transfer\\r\\n    function transfer(\\r\\n        address _to,\\r\\n        uint256 _value\\r\\n    ) external returns (bool success) {\\r\\n        require(balanceOf[msg.sender] >= _value);\\r\\n        _transfer(msg.sender, _to, _value);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /// @dev internal helper transfer function with required safety checks\\r\\n    /// @param _from, where funds coming the sender\\r\\n    /// @param _to receiver of token\\r\\n    /// @param _value amount value of token to send\\r\\n    // Internal function transfer can only be called by this contract\\r\\n    //  Emit Transfer Event event\\r\\n    function _transfer(address _from, address _to, uint256 _value) internal {\\r\\n        // Ensure sending is to valid address! 0x0 address cane be used to burn()\\r\\n        require(_to != address(0));\\r\\n        balanceOf[_from] = balanceOf[_from] - (_value);\\r\\n        balanceOf[_to] = balanceOf[_to] + (_value);\\r\\n        emit Transfer(_from, _to, _value);\\r\\n    }\\r\\n\\r\\n    /// @notice Approve other to spend on your behalf eg an exchange\\r\\n    /// @param _spender allowed to spend and a max amount allowed to spend\\r\\n    /// @param _value amount value of token to send\\r\\n    /// @return true, success once address approved\\r\\n    //  Emit the Approval event\\r\\n    // Allow _spender to spend up to _value on your behalf - Like Uniswap\\r\\n    function approve(address _spender, uint256 _value) external returns (bool) {\\r\\n        require(_spender != address(0));\\r\\n        allowance[msg.sender][_spender] = _value;\\r\\n        emit Approval(msg.sender, _spender, _value);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /// @notice transfer by approved person from original address of an amount within approved limit\\r\\n    /// @param _from, address sending to and the amount to send\\r\\n    /// @param _to receiver of token\\r\\n    /// @param _value amount value of token to send\\r\\n    /// @dev internal helper transfer function with required safety checks\\r\\n    /// @return true, success once transfered from original account\\r\\n    // Allow _spender to spend up to _value on your behalf\\r\\n    function transferFrom(\\r\\n        address _from,\\r\\n        address _to,\\r\\n        uint256 _value\\r\\n    ) external returns (bool) {\\r\\n        require(_value <= balanceOf[_from]);\\r\\n        require(_value <= allowance[_from][msg.sender]);\\r\\n        allowance[_from][msg.sender] = allowance[_from][msg.sender] - (_value);\\r\\n        _transfer(_from, _to, _value);\\r\\n        return true;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x24981b2cf5f7a1e448ffc1b7ec37e4637a4593db52321893ec74221e679c6d7e\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620012d9380380620012d9833981810160405281019062000037919062000287565b836000908162000048919062000578565b5082600190816200005a919062000578565b508160028190555080600381905550600354600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505050506200065f565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200012282620000d7565b810181811067ffffffffffffffff82111715620001445762000143620000e8565b5b80604052505050565b600062000159620000b9565b905062000167828262000117565b919050565b600067ffffffffffffffff8211156200018a5762000189620000e8565b5b6200019582620000d7565b9050602081019050919050565b60005b83811015620001c2578082015181840152602081019050620001a5565b60008484015250505050565b6000620001e5620001df846200016c565b6200014d565b905082815260208101848484011115620002045762000203620000d2565b5b62000211848285620001a2565b509392505050565b600082601f830112620002315762000230620000cd565b5b815162000243848260208601620001ce565b91505092915050565b6000819050919050565b62000261816200024c565b81146200026d57600080fd5b50565b600081519050620002818162000256565b92915050565b60008060008060808587031215620002a457620002a3620000c3565b5b600085015167ffffffffffffffff811115620002c557620002c4620000c8565b5b620002d38782880162000219565b945050602085015167ffffffffffffffff811115620002f757620002f6620000c8565b5b620003058782880162000219565b9350506040620003188782880162000270565b92505060606200032b8782880162000270565b91505092959194509250565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200038a57607f821691505b602082108103620003a0576200039f62000342565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026200040a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620003cb565b620004168683620003cb565b95508019841693508086168417925050509392505050565b6000819050919050565b600062000459620004536200044d846200024c565b6200042e565b6200024c565b9050919050565b6000819050919050565b620004758362000438565b6200048d620004848262000460565b848454620003d8565b825550505050565b600090565b620004a462000495565b620004b18184846200046a565b505050565b5b81811015620004d957620004cd6000826200049a565b600181019050620004b7565b5050565b601f8211156200052857620004f281620003a6565b620004fd84620003bb565b810160208510156200050d578190505b620005256200051c85620003bb565b830182620004b6565b50505b505050565b600082821c905092915050565b60006200054d600019846008026200052d565b1980831691505092915050565b60006200056883836200053a565b9150826002028217905092915050565b620005838262000337565b67ffffffffffffffff8111156200059f576200059e620000e8565b5b620005ab825462000371565b620005b8828285620004dd565b600060209050601f831160018114620005f05760008415620005db578287015190505b620005e785826200055a565b86555062000657565b601f1984166200060086620003a6565b60005b828110156200062a5784890151825560018201915060208501945060208101905062000603565b868310156200064a578489015162000646601f8916826200053a565b8355505b6001600288020188555050505b505050505050565b610c6a806200066f6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c806370a082311161006657806370a08231146101345780639484424814610164578063a9059cbb14610182578063bba1964f146101b2578063dd62ed3e146101d057610093565b8063095ea7b31461009857806318cb0ec0146100c857806323b872dd146100e65780636a74a0fc14610116575b600080fd5b6100b260048036038101906100ad919061092b565b610200565b6040516100bf9190610986565b60405180910390f35b6100d0610320565b6040516100dd9190610a31565b60405180910390f35b61010060048036038101906100fb9190610a53565b6103ae565b60405161010d9190610986565b60405180910390f35b61011e6105a3565b60405161012b9190610ab5565b60405180910390f35b61014e60048036038101906101499190610ad0565b6105a9565b60405161015b9190610ab5565b60405180910390f35b61016c6105c1565b6040516101799190610ab5565b60405180910390f35b61019c6004803603810190610197919061092b565b6105c7565b6040516101a99190610986565b60405180910390f35b6101ba61062a565b6040516101c79190610a31565b60405180910390f35b6101ea60048036038101906101e59190610afd565b6106b8565b6040516101f79190610ab5565b60405180910390f35b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361023a57600080fd5b81600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550818373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a46001905092915050565b6001805461032d90610b6c565b80601f016020809104026020016040519081016040528092919081815260200182805461035990610b6c565b80156103a65780601f1061037b576101008083540402835291602001916103a6565b820191906000526020600020905b81548152906001019060200180831161038957829003601f168201915b505050505081565b6000600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548211156103fc57600080fd5b600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482111561048557600080fd5b81600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461050d9190610bcc565b600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506105988484846106dd565b600190509392505050565b60035481565b60046020528060005260406000206000915090505481565b60025481565b600081600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561061557600080fd5b6106203384846106dd565b6001905092915050565b6000805461063790610b6c565b80601f016020809104026020016040519081016040528092919081815260200182805461066390610b6c565b80156106b05780601f10610685576101008083540402835291602001916106b0565b820191906000526020600020905b81548152906001019060200180831161069357829003601f168201915b505050505081565b6005602052816000526040600020602052806000526040600020600091509150505481565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361071657600080fd5b80600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546107619190610bcc565b600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546107ef9190610c00565b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108c282610897565b9050919050565b6108d2816108b7565b81146108dd57600080fd5b50565b6000813590506108ef816108c9565b92915050565b6000819050919050565b610908816108f5565b811461091357600080fd5b50565b600081359050610925816108ff565b92915050565b6000806040838503121561094257610941610892565b5b6000610950858286016108e0565b925050602061096185828601610916565b9150509250929050565b60008115159050919050565b6109808161096b565b82525050565b600060208201905061099b6000830184610977565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156109db5780820151818401526020810190506109c0565b60008484015250505050565b6000601f19601f8301169050919050565b6000610a03826109a1565b610a0d81856109ac565b9350610a1d8185602086016109bd565b610a26816109e7565b840191505092915050565b60006020820190508181036000830152610a4b81846109f8565b905092915050565b600080600060608486031215610a6c57610a6b610892565b5b6000610a7a868287016108e0565b9350506020610a8b868287016108e0565b9250506040610a9c86828701610916565b9150509250925092565b610aaf816108f5565b82525050565b6000602082019050610aca6000830184610aa6565b92915050565b600060208284031215610ae657610ae5610892565b5b6000610af4848285016108e0565b91505092915050565b60008060408385031215610b1457610b13610892565b5b6000610b22858286016108e0565b9250506020610b33858286016108e0565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610b8457607f821691505b602082108103610b9757610b96610b3d565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610bd7826108f5565b9150610be2836108f5565b9250828203905081811115610bfa57610bf9610b9d565b5b92915050565b6000610c0b826108f5565b9150610c16836108f5565b9250828201905080821115610c2e57610c2d610b9d565b5b9291505056fea264697066735822122095b937577428c89ec5e810c5b704094506e4b09ba33bad565dde0a44fe62613164736f6c63430008110033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100935760003560e01c806370a082311161006657806370a08231146101345780639484424814610164578063a9059cbb14610182578063bba1964f146101b2578063dd62ed3e146101d057610093565b8063095ea7b31461009857806318cb0ec0146100c857806323b872dd146100e65780636a74a0fc14610116575b600080fd5b6100b260048036038101906100ad919061092b565b610200565b6040516100bf9190610986565b60405180910390f35b6100d0610320565b6040516100dd9190610a31565b60405180910390f35b61010060048036038101906100fb9190610a53565b6103ae565b60405161010d9190610986565b60405180910390f35b61011e6105a3565b60405161012b9190610ab5565b60405180910390f35b61014e60048036038101906101499190610ad0565b6105a9565b60405161015b9190610ab5565b60405180910390f35b61016c6105c1565b6040516101799190610ab5565b60405180910390f35b61019c6004803603810190610197919061092b565b6105c7565b6040516101a99190610986565b60405180910390f35b6101ba61062a565b6040516101c79190610a31565b60405180910390f35b6101ea60048036038101906101e59190610afd565b6106b8565b6040516101f79190610ab5565b60405180910390f35b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361023a57600080fd5b81600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550818373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a46001905092915050565b6001805461032d90610b6c565b80601f016020809104026020016040519081016040528092919081815260200182805461035990610b6c565b80156103a65780601f1061037b576101008083540402835291602001916103a6565b820191906000526020600020905b81548152906001019060200180831161038957829003601f168201915b505050505081565b6000600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548211156103fc57600080fd5b600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482111561048557600080fd5b81600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461050d9190610bcc565b600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506105988484846106dd565b600190509392505050565b60035481565b60046020528060005260406000206000915090505481565b60025481565b600081600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561061557600080fd5b6106203384846106dd565b6001905092915050565b6000805461063790610b6c565b80601f016020809104026020016040519081016040528092919081815260200182805461066390610b6c565b80156106b05780601f10610685576101008083540402835291602001916106b0565b820191906000526020600020905b81548152906001019060200180831161069357829003601f168201915b505050505081565b6005602052816000526040600020602052806000526040600020600091509150505481565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361071657600080fd5b80600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546107619190610bcc565b600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546107ef9190610c00565b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108c282610897565b9050919050565b6108d2816108b7565b81146108dd57600080fd5b50565b6000813590506108ef816108c9565b92915050565b6000819050919050565b610908816108f5565b811461091357600080fd5b50565b600081359050610925816108ff565b92915050565b6000806040838503121561094257610941610892565b5b6000610950858286016108e0565b925050602061096185828601610916565b9150509250929050565b60008115159050919050565b6109808161096b565b82525050565b600060208201905061099b6000830184610977565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156109db5780820151818401526020810190506109c0565b60008484015250505050565b6000601f19601f8301169050919050565b6000610a03826109a1565b610a0d81856109ac565b9350610a1d8185602086016109bd565b610a26816109e7565b840191505092915050565b60006020820190508181036000830152610a4b81846109f8565b905092915050565b600080600060608486031215610a6c57610a6b610892565b5b6000610a7a868287016108e0565b9350506020610a8b868287016108e0565b9250506040610a9c86828701610916565b9150509250925092565b610aaf816108f5565b82525050565b6000602082019050610aca6000830184610aa6565b92915050565b600060208284031215610ae657610ae5610892565b5b6000610af4848285016108e0565b91505092915050565b60008060408385031215610b1457610b13610892565b5b6000610b22858286016108e0565b9250506020610b33858286016108e0565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610b8457607f821691505b602082108103610b9757610b96610b3d565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610bd7826108f5565b9150610be2836108f5565b9250828203905081811115610bfa57610bf9610b9d565b5b92915050565b6000610c0b826108f5565b9150610c16836108f5565b9250828201905080821115610c2e57610c2d610b9d565b5b9291505056fea264697066735822122095b937577428c89ec5e810c5b704094506e4b09ba33bad565dde0a44fe62613164736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "params": {
          "_spender": "allowed to spend and a max amount allowed to spend",
          "_value": "amount value of token to send"
        },
        "returns": {
          "_0": "true, success once address approved"
        }
      },
      "transfer(address,uint256)": {
        "params": {
          "_to": "receiver of token",
          "_value": "amount value of token to send"
        },
        "returns": {
          "success": "as true, for transfer"
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "internal helper transfer function with required safety checks",
        "params": {
          "_from": ", address sending to and the amount to send",
          "_to": "receiver of token",
          "_value": "amount value of token to send"
        },
        "returns": {
          "_0": "true, success once transfered from original account"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "approve(address,uint256)": {
        "notice": "Approve other to spend on your behalf eg an exchange"
      },
      "transfer(address,uint256)": {
        "notice": "transfer amount of tokens to an address"
      },
      "transferFrom(address,address,uint256)": {
        "notice": "transfer by approved person from original address of an amount within approved limit"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 3,
        "contract": "contracts/Token.sol:Token",
        "label": "s_name",
        "offset": 0,
        "slot": "0",
        "type": "t_string_storage"
      },
      {
        "astId": 5,
        "contract": "contracts/Token.sol:Token",
        "label": "s_symbol",
        "offset": 0,
        "slot": "1",
        "type": "t_string_storage"
      },
      {
        "astId": 7,
        "contract": "contracts/Token.sol:Token",
        "label": "s_decimals",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 9,
        "contract": "contracts/Token.sol:Token",
        "label": "s_totalSupply",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 13,
        "contract": "contracts/Token.sol:Token",
        "label": "balanceOf",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 19,
        "contract": "contracts/Token.sol:Token",
        "label": "allowance",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}